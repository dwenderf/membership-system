/**
 * Script to provide step-by-step instructions for cleaning up Xero invoices
 * 
 * This script analyzes the current state and provides clear instructions
 * for what needs to be done in Xero to fix the invoice/payment issues.
 */

const { createClient } = require('@supabase/supabase-js')
require('dotenv').config({ path: '.env.local' })

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
)

async function generateCleanupInstructions(userId) {
  console.log(`üìã Xero Cleanup Instructions for user: ${userId}`)
  console.log('=' .repeat(60))
  
  try {
    // Get user details
    const { data: user, error: userError } = await supabase
      .from('users')
      .select('*')
      .eq('id', userId)
      .single()
    
    if (userError) {
      console.error('‚ùå Error finding user:', userError)
      return
    }
    
    console.log(`üë§ User: ${user.first_name} ${user.last_name} (${user.email})`)
    console.log('')
    
    // Get all Xero invoices for this user
    const { data: xeroInvoices, error: invoicesError } = await supabase
      .from('xero_invoices')
      .select('*')
      .eq('staging_metadata->>user_id', userId)
      .order('created_at', { ascending: false })
    
    if (invoicesError) {
      console.error('‚ùå Error fetching Xero invoices:', invoicesError)
      return
    }
    
    // Find the problematic invoices (INV-6903, INV-6904)
    const problematicInvoices = xeroInvoices.filter(invoice => 
      invoice.invoice_number === 'INV-6903' || invoice.invoice_number === 'INV-6904'
    )
    
    // Find the correct invoices that should be synced
    const correctInvoices = xeroInvoices.filter(invoice => 
      invoice.sync_status === 'failed' || invoice.sync_status === 'pending'
    )
    
    console.log('üö® PROBLEMATIC INVOICES IN XERO (need cleanup):')
    console.log('')
    
    problematicInvoices.forEach((invoice, i) => {
      console.log(`${i+1}. ${invoice.invoice_number} (${invoice.xero_invoice_id})`)
      console.log(`   Amount: $${(invoice.net_amount / 100).toFixed(2)}`)
      console.log(`   Status: ${invoice.invoice_status}`)
      console.log(`   Issue: Wrong amount - should be different`)
      console.log('')
    })
    
    console.log('‚úÖ CORRECT INVOICES (should be synced):')
    console.log('')
    
    correctInvoices.forEach((invoice, i) => {
      console.log(`${i+1}. Invoice ID: ${invoice.id}`)
      console.log(`   Amount: $${(invoice.net_amount / 100).toFixed(2)}`)
      console.log(`   Payment ID: ${invoice.payment_id}`)
      console.log(`   Sync Status: ${invoice.sync_status}`)
      console.log('')
    })
    
    console.log('üìù STEP-BY-STEP CLEANUP INSTRUCTIONS:')
    console.log('')
    console.log('1. üóëÔ∏è  IN XERO - Remove payments from wrong invoices:')
    problematicInvoices.forEach((invoice, i) => {
      console.log(`   ‚Ä¢ Go to ${invoice.invoice_number} (${invoice.xero_invoice_id})`)
      console.log(`   ‚Ä¢ Remove any payments attached to this invoice`)
      console.log(`   ‚Ä¢ Note: These payments are invalid anyway (wrong amounts)`)
    })
    console.log('')
    
    console.log('2. ‚ùå IN XERO - Void the wrong invoices:')
    problematicInvoices.forEach((invoice, i) => {
      console.log(`   ‚Ä¢ Void ${invoice.invoice_number} (${invoice.xero_invoice_id})`)
      console.log(`   ‚Ä¢ This will remove it from financial reporting`)
    })
    console.log('')
    
    console.log('3. üîÑ IN OUR SYSTEM - Reset failed invoices:')
    console.log(`   ‚Ä¢ Run: node scripts/debug/reset-failed-invoices.js ${userId}`)
    console.log('')
    
    console.log('4. üîÑ RUN XERO SYNC:')
    console.log('   ‚Ä¢ Go to admin/accounting page')
    console.log('   ‚Ä¢ Click "Manual Sync" or wait for cron job')
    console.log('   ‚Ä¢ This will create new, correct invoices')
    console.log('')
    
    console.log('5. ‚úÖ VERIFY RESULTS:')
    console.log(`   ‚Ä¢ Run: node scripts/debug/debug-user-xero-records.js ${userId}`)
    console.log('   ‚Ä¢ Check that new invoices have correct amounts')
    console.log('   ‚Ä¢ Verify payments are linked correctly')
    console.log('')
    
    console.log('‚ö†Ô∏è  IMPORTANT NOTES:')
    console.log('‚Ä¢ The old invoices (INV-6903, INV-6904) have wrong amounts')
    console.log('‚Ä¢ The payments on them are invalid and should be removed')
    console.log('‚Ä¢ After cleanup, new invoices will be created with correct amounts')
    console.log('‚Ä¢ This will fix the financial reporting accuracy')
    
  } catch (error) {
    console.error('‚ùå Script error:', error)
  }
}

const userId = process.argv[2]
if (!userId) {
  console.error('‚ùå Please provide a user ID')
  console.log('Usage: node scripts/debug/xero-cleanup-instructions.js <user_id>')
  process.exit(1)
}

generateCleanupInstructions(userId) 